// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: hello.proto

#include "hello.pb.h"
#include "hello.grpc.pb.h"

#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/sync_stream.h>
#include <gmock/gmock.h>
namespace hello {

class MockHelloServiceStub : public HelloService::StubInterface {
 public:
  MOCK_METHOD3(Get, ::grpc::Status(::grpc::ClientContext* context, const ::hello::GetRequest& request, ::hello::GetResponse* response));
  MOCK_METHOD3(AsyncGetRaw, ::grpc::ClientAsyncResponseReaderInterface< ::hello::GetResponse>*(::grpc::ClientContext* context, const ::hello::GetRequest& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(PrepareAsyncGetRaw, ::grpc::ClientAsyncResponseReaderInterface< ::hello::GetResponse>*(::grpc::ClientContext* context, const ::hello::GetRequest& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD2(PostRaw, ::grpc::ClientWriterInterface< ::hello::PostRequest>*(::grpc::ClientContext* context, ::hello::PostResponse* response));
  MOCK_METHOD4(AsyncPostRaw, ::grpc::ClientAsyncWriterInterface< ::hello::PostRequest>*(::grpc::ClientContext* context, ::hello::PostResponse* response, ::grpc::CompletionQueue* cq, void* tag));
  MOCK_METHOD3(PrepareAsyncPostRaw, ::grpc::ClientAsyncWriterInterface< ::hello::PostRequest>*(::grpc::ClientContext* context, ::hello::PostResponse* response, ::grpc::CompletionQueue* cq));
};

} // namespace hello

